{
  "me": "@IzKuipers",
  "home": {
    "_name": "Home",
    "hero": {
      "top": "Hoi!$ Ik ben ",
      "name": "Izaak",
      "bottom": "En dit is mijn portfolio"
    }
  },
  "about": {
    "_name": "Over Mij",
    "summary": "Hoi! Ik ben Izaak, een 17-jarige full-stack enthousiaste ontwikkelaar uit Nederland. Ik heb als doel om software te schrijven die gebruiksvriendelijk is en de klus op de beste manier klaart. In de loop der jaren heb ik de grenzen van webtechnologieën steeds verder verkend, tot het ontwikkelen van besturingssystemen binnen de browser. in 2024 ben ik begonnen aan mijn volgende grootste project:",
    "history": {
      "title": "Mijn Geschiedenis",
      "text": "Ik ben al sinds jonge leeftijd geïnteresseerd in de ICT. Ik begon met experimenteren op een Windows XP PC toen ik 6 was, en begon al geen jaar later met programmeren op mijn eerste 'moderne' computer die ik kreeg toen ik 7 werd. De eerste talen die ik probeerde waren Batch en VBS, met later HTML, CSS en Javascript. Over de jaren heen heb ik alle uitdagingen tot me genomen van web-besturingssystemen tot API's en obscure, specifieke applicaties."
    },
    "skills": {
      "title": "Wat heb ik geleerd?",
      "frontend": "Frontend",
      "backend": "Backend",
      "fullstack": "Fullstack",
      "summary": "Alle talen op één plek",
      "disclaimer": "* Talen die ik nog aan het leren ben"
    },
    "projectsLink": {
      "title": "Mijn meest bijzondere projecten",
      "text": "Ik heb in de afgelopen 10 jaar aan een hoop projecten gewerkt, sommigen zeggen zelfs <b>te veel</b>. Om te zien wat ik heb gemaakt, neem een kijkje op mijn Projectenpagina:",
      "link": "Mijn Projecten"
    }
  },
  "projects": {
    "_name": "Projecten",
    "newNotice": "Ik ben bezig met een nieuwe projecten pagina! Neem een kijkje en laat het mij weten als je enige feedback hebt:",
    "gallery": {
      "name": "Projecten Galerij",
      "text": "Welkom in mijn Projecten Galerij! Ik heb over de jaren heen een hoop projecten gemaakt, meer dan op deze pagina past, maar hier staan de meest opmerkelijke. Klik of tik op de naam van een project voor meer informatie."
    },
    "sacruda": {
      "description": "Een systeem om studenten te helpen met hun schoolopdrachten",
      "longDescription": "Het idee achter Sacruda is simpel. Ik wilde een eenvoudige maar krachtige manier ontwikkelen om mijzelf en andere studenten te helpen hun schoolopdrachten bij te houden. Wat daarop volgde, waren twee maanden van intensief programmeren om een behoorlijk groot project op te zetten, waarvoor een eigen infrastructuur nodig was om het draaiende te houden. Het maakt gebruik van MongoDB voor de database, Svelte voor de frontend en NodeJS (Typescript Express API) voor de backend. Sacruda is de voortzetting van de SOS: een eerdere (en veel slechtere) implementatie van hetzelfde principe, draaiend op een op JSON gebaseerde database (oeps) en aan elkaar geregen stukken oude Svelte spaghetti.<br><br>Sacruda telt meer dan 38 duizend regels code. Het heeft aparte frontends voor zowel mobiel als desktop, om op beide de beste gebruikerservaring te bieden; een administratiepaneel om gebruikers van het platform te beheren; zelfs een Discord-bot waarmee beheerders gebruikers eenvoudig onderweg kunnen beheren. Sacruda biedt krachtige filter-, sorteer- en zoekopties om studenten te helpen hun opdrachten zo effectief mogelijk te beheren. Voor meer informatie over wat Sacruda allemaal kan, kunt u de website hierboven bezoeken."
    },
    "hackathon-24": {
      "description": "Publieksprijs gewonnen bij de Digital Proof Hackathon",
      "longDescription": "In december 2024 deed ik met drie teamleden mee aan de Digital Proof Hackathon op de Automotive Campus in Helmond. Hier waren wij getaakt met het maken van een overzichtelijk SPA dashboard om ongeveer 70 kolommen aan gegevens overzichtelijk en simplistisch weer te geven aan de gebruikers. We gebruikte een Svelte en TypeScript voor de frontend, en TypeScript met Express.JS en SQL voor de backend.<br><br>Wegens privacyredenen geef ik geen specifieke informatie over het dashboard of de geassocieerde data weg. Ik kan het dashboard hier dus ook niet weergeven. Het beste wat ik kan doen is een foto toevoegen van de Publieksprijs, die wij hebben gewonnen met onze dashboard.<br><br><h1>Met dank aan</h1>Deze editie van de Digital Proof Hackathon was mogelijk gemaakt door De Digitale Werkplaats, Hackathon Masters, Automotive Campus Helmond en Innovatiehuis de peel.<br><br>Ons team, <b>Hackatjon-v2</b>, bestond uit mij en deze geweldige personen:<br><br><ul><li><a href='https://github.com/luvbxgs'>@luvbxgs</a></li> <li><a href='https://github.com/zyggzzz'>@zyggzzz</a></li> <li><a href='https://github.com/TiesOnKip'>@TiesOnKip</a></li></ul><br>Jullie zijn geweldig. Bedankt iedereen!"
    },
    "arcos": {
      "description": "Een geavanceerde besturingssysteem-omgeving in de Browser, geschreven in Svelte",
      "longDescription": "Eigenlijk had ArcOS nooit een visie. Het begon als een weekendproject waarin ik wilde ontdekken wat er allemaal mogelijk was met mijn groeiende HTML-, CSS- en JS-vaardigheden. De eerste versie van ArcOS, genaamd WebOSv1, zou een tweedaags project zijn. Dat liep helaas anders. Ik bleef de eerste versie aanpassen, totdat ik alles uiteindelijk weggooide en verderging met WebOSv2. v2 had daadwerkelijk verplaatsbare vensters en een fatsoenlijke taakbalk en startmenu ten opzichte van v1. Het ontwerp leek opvallend veel op Windows XP, want tja, ik ben een fan van XP. WebOSv2 was echter niet het beste wat het kon zijn, aangezien alle JavaScript-code in één enkele script-tag in de HTML stond. Door die... bijzondere keuze telde het index-bestand van WebOSv2 bijna duizend regels. Vergeet niet, ik was nog een beginnende developer.<br><br>Na WebOSv2 brak het tijdperk van Electron en NodeJS aan. Ik begon impulsief aan WebOSv3, omdat ik net had ontdekt dat Discord en andere grote applicaties het ook gebruikte. Ik volgde een tutorial van lang geleden om te zien of ik het werkend kon krijgen, en toen dat lukte, ging ik meteen aan de slag met WebOSv3. v3 bracht veel verbeteringen ten opzichte van v2, wat eigenlijk wel de trend lijkt te zijn, toch? Hoe dan ook, v3 had een bestandssysteem, meerdere gebruikers, een hoop personalisatieopties en zelfs een terminal die in JavaScript was geschreven. Toen WebOS veranderde in ArcOS, verhoogde ik de versie van v3 naar v4, niet omdat ik opnieuw begon, maar omdat de rebranding van het project het hele uiterlijk en gevoel veranderde. WebOSv3 werd ArcOSv4.<br><br>In juli 2022 wilde ik iets anders doen. Ik had al meer dan twee jaar Vanilla JS-implementaties van ArcOS geschreven en wilde daar verandering in brengen. Daarom besloot ik de compleet andere kant op te gaan: ik maakte ArcOS v5 met Typescript en Svelte. Omdat v5 een JS-framework gebruikte, kon ik niet langer gebruik maken van het bestandssysteem van de gebruiker. Dus in plaats van dat probleem te omzeilen, schreef ik een backend waarmee gebruikers verbinding konden maken, zodat ze hun bestanden en instellingen in de cloud konden opslaan in plaats van lokaal. Dit werkte perfect.<br><br>En toen, aan het einde van 2023, begon ArcOS v6. Het idee was eenvoudig: ik wilde de implementatie van v5 opnieuw vormgeven om een stabielere, professionelere en verfijndere ervaring voor de gebruiker te maken. Het had services, meerdere applicatie-instanties door middel van processen, een consistente UI, een systeem voor bug reports, meer achtergronden en zelfs experimentele sideloading. Na vier lange jaren van coderen voor WebOS en ArcOS besloot ik het project uit de lucht te halen. De realiteit was dat ik er niet langer plezier in had. Dus op 1 september nam ik afscheid van de servers, van mijn team, van vier jaar hard werk, zodat ik me kon richten op Sacruda."
    },
    "canvasscript": {
      "description": "Een gekke poging om een taal te schrijven voor het manipuleren van een canvas",
      "longDescription": "CanvasScript is een grappig project. Ik wilde meer leren over HTML-canvas, en ik dacht dat de beste manier om dat te doen zou zijn door een project te maken waarin ik het gebruik. Dus maakte ik CanvasScript. In CanvasScript kun je code schrijven om een canvas te manipuleren. Het heeft keywords voor lijnen, cirkels, kleuren, groottes, noem maar op. Er zijn zelfs variables en comments, zodat je leesbare en aanpasbare code kunt schrijven. Het bevat ook foutcontrole om je te vertellen op welke regel je een fout maakt door middel van JavaScript exceptions.<br><br>CanvasScript volgt geen gebruikelijke standaarden voor het maken van programmeertalen; het is eigenlijk gewoon een verzameling functies waarbij argumenten uit een string worden geparsed voor elke regel in het script van de gebruiker. De functionaliteit van CanvasScript kan getest worden met het testbestand op de GitHub-repository, genaamd \"benchmark.canvas\". Dit bestand is ook te zien in de screenshot hierboven. CanvasScript was ook bedoeld als weekendproject, en dat is het gelukkig gebleven."
    },
    "instype": {
      "description": "Een Socket.IO applicatie waar alles wat je typt gelijk aan alle andere mensen wordt weergegeven",
      "longDescription": "InsType is een leuk project. Het breidt traditionele telefooncommunicatie uit en transformeert het naar een puur tekstuele omgeving. Wanneer je InsType joint zit je in één ruimte samen met iedereen die verbonden is. Zodra je ook maar één teken typt, wordt dat meteen weergegeven op het scherm, waardoor iedereen kan zien wat je typt—zelfs je typfouten. Dit zorgt ervoor dat de gebruiker zorgvuldig typt om zichzelf niet voor schut te zetten. InsType draait op een Typescript Socket.IO-backend, met een vrij simpele set events om verbinding te maken, te verbreken en tekst door te sturen. InsType is een van mijn eenvoudigste Socket.IO-applicaties, ook al is het vaak de leukste om te gebruiken."
    },
    "inepta": {
      "description": "Een Electron OS geschreven als voorbeeld voor wat mogelijk is met normale Javascript",
      "longDescription": "Inepta is een terugblik op het verleden: het is een OS geschreven in vanilla Javascript die draait in Electron. Ik ben het aan het schrijven om terug te kijken naar de Legacy ArcOS dagen en om te kijken wat er nou precies mogelijk is met Javascript in een moderne browser omgeving. Tot mijn verbazing is dat eigenlijk heel veel. Inepta (wat Latijns is voor ‘silly’, trouwens) heeft een Kernel met Kernel Modules zoals process beheer en bestandssysteem integratie. Inepta’s UI is een mix van de ‘grote 3’; Windows, Linux en MacOS. Heel Inepta is geschreven op een simplistische en modulaire manier om beginnende Javascript developers (zoals mijn klasgenoten) te laten zien wat er theoretisch en praktisch mogelijk is met JS."
    },
    "vtdx": {
      "description": "Een Typescript notitie en takenlijst",
      "longDescription": "vTDx was een combinatie van dingen. Als eerste was het een test om te zien wat ik kon doen met Typescript. Daarom is de volledige vTDx-app, inclusief de UI, geschreven in enkel Typescript door gebruik te maken van de DOM API's. vTDx staat voor Vite-ToDo-X. De 'X' had eigenlijk niet veel betekenis, maar ik vond dat het iets toevoegde aan de naam wat anders ontbrak. Hoe dan ook, vTDx was een voortzetting van TDx: een andere notitie-app die ik eerder maakte met Vanilla JS in Electron.<br><br>Ik had geen duidelijke visie toen ik vTDx maakte. Ik wilde gewoon zien wat er mogelijk was met mijn huidige Typescript-vaardigheden, dus besloot ik een van de projecten opnieuw te maken waar ik destijds trots op was. Als ik terug kijk vind ik het ontwerp van beide TDx en vTDx maar matig, tenminste naar mijn eerlijke mening, maar al met al waren ze niet zo slecht. vTDx heeft niet veel vormgevingsinstellingen, maar het heeft wel een aantal thema’s voor zowel licht- als donker-modus. Je kunt de zijbalk inklappen, er is een prullenbak en nog een aantal andere functies die ik me eerlijk gezegd niet meer goed kan herinneren.<br><br>Nu ArcOS dood is, denk ik dat vTDx mijn langst lopende project is dat nog steeds ergens online draait. Ik kan me alleen niet voorstellen hoeveel beveiligingslekken er waarschijnlijk zijn ontstaan in de versies van de gebruikte libraries—daar zou ik waarschijnlijk nachtmerries van krijgen als ik Dependabot zou openen, dus, voor mijn eigen gemoedsrust, laat ik dat maar. vTDx had waarschijnlijk al LANG geleden gearchiveerd moeten worden, maar nu ik dit schrijf heb ik besloten dat niet te doen. Gewoon voor de lol."
    },
    "donut": {
      "description": "Een port van Donut.C naar Typescript",
      "longDescription": "Er valt eigenlijk niet veel te zeggen over Donut.C-TS: het is simpelweg een test om te kijken of ik het bekende Donut.C-project naar Typescript kon porten. Toen ik het maakte portte ik het zelfs naar een van mijn andere projecten, ArcOS, als de 'DonutApp'-applicatie. Dit is te zien op de ArcOS GitHub."
    },
    "discontinuedNotice": "Ik heb dit project stopgezet! Aan dit project wordt niet meer gewerkt, maar het is nog steeds een goed voorbeeld van wat ik kan.",
    "website": "Website",
    "viewCode": "Code weergeven",
    "moreProjects": "Er is nog meer op <a href=\"https://github.com/IzKuipers\">mijn GitHub</a>!"
  },
  "contact": {
    "_name": "Contact",
    "github": "GitHub",
    "twitter": "Twitter",
    "community": "IzKuipers$ Community",
    "email": "E-mail",
    "discord": "Discord",
    "direct": {
      "title": "Stuur mij een bericht",
      "text": "Heb je een vraag voor mij? Vul het volgende formulier in en ik zal zo snel als mogelijk reageren:",
      "name": "Hoe heet je?",
      "email": "Wat is jouw e-mail?",
      "message": "Jouw bericht?",
      "send": "Versturen",
      "thankyou": {
        "title": "Dankjewel!",
        "message": "De e-mail is verstuurd! Ik zal zo snel als mogelijk jou een e-mail terug sturen."
      },
      "failed": {
        "title": "Oh nee!",
        "text": "Kon jouw e-mail niet versturen! Probeer het later opnieuw."
      }
    }
  }
}
