{
  "home": {
    "_name": "Home",
    "hero": {
      "top": "Hoi!$ Ik ben ",
      "bottom": {
        "text": "En deze plek gaat ",
        "link": "over mij"
      }
    }
  },
  "about": {
    "_name": "Over Mij",
    "summary": "Hoi! Ik ben Izaak, een 17-jarige full-stack enthusiaste ontwikkelaar uit Nederland. Ik heb als doel om software te schrijven die gebruiksvriendelijk is en de klus op de beste manier klaart. Ik heb over de jaren heen de limieten van web-technologiën voortdurend aangetikt, tot op het punt van besturings-systemen in de browser. in 2024 ben ik begonnen aan mijn volgende grootste project:",
    "history": {
      "title": "Mijn Geschiedenis",
      "text": "Ik was al vanaf jongs af aan geïnteresseerd in de ICT. Ik begon met experimenteren op een Windows XP PC toen ik 6 was, en begon al geen jaar later met programmeren toen ik mijn eerste echte computer kreeg toen ik 7 werd. De eerste talen die ik probeerde waren Batch en VBS, met later HTML, CSS en Javascript. Over de jaren heen heb ik alle uitdagingen tot me genomen van web-besturingssystemen tot API's en obscure, specifieke applicaties."
    },
    "skills": {
      "title": "Wat ik heb geleerd",
      "frontend": "Frontend",
      "backend": "Backend",
      "summary": "Alle talen op één plek",
      "disclaimer": "* Talen die ik nog aan het leren ben",
      "projectsLink": {
        "title": "Opmerkelijke projecten waar ik aan heb gewerkt",
        "text": "Ik heb in de afgelopen 10 jaar aan een hoop projecten gewerkt, sommigen zeggen zelfs <b>te veel</b>. Om te zien wat ik heb gemaakt, neem een kijkje op mijn Projectenpagina:",
        "link": "Mijn Projecten"
      }
    }
  },
  "projects": {
    "_name": "Projecten",
    "sacruda": {
      "description": "Een systeem om studenten te helpen met hun schoolopdrachten",
      "longDescription": "Sacruda's idea is simple. I wanted a simplistic yet powerful way to help me and other students keep track of their school assignments. What followed next was two months of exhaustive programming to create a rather huge project, requiring its own infrastructure to power it. It uses MongoDB for the database, Svelte for the frontend, and NodeJS (Typescript Express API) for the backend. Sacruda is the continuation of the SOS: a previous (and way worse) implementation of the same principle, running on a JSON based database (yikes) and threaded together pieces of ancient Svelte spaghetti.<br><br>Sacruda counts to over 38 thousand lines of code. It's got separate frontends for both mobile and desktop to deliver the best experience for both, an administration panel to manage users of the platform, even a discord bot to easily allow administrators to manage users on the go. Sacruda has powerful filtering, sorting and search options to help students manage their assignments in the most effective way possible. To read more about what Sacruda is capable of, please visit the website linked above (Dutch only, sorry!)"
    },
    "arcos": {
      "description": "Een geavanceerde besturingssysteem-omgeving in de Browser, geschreven in Svelte",
      "longDescription": "Really, ArcOS didn't have a vision. It started as a weekend project where I wanted to see what was capable with my ever growing HTML, CSS and JS skills. The original version of ArcOS, named WebOSv1, was supposed to be a two-day endeavour. Unfortunately, that didn't last. I kept expanding upon the initial project for days, eventually scrapping all of it and moving on to WebOSv2. Unlike v1, v2 actually had movable windows and a proper taskbar/start menu. Its design actually shared a lot of similarities with Windows XP, because, well, I like XP. WebOSv2 left a lot to be desired though, as all of the javascript code was written in 1 (one) script-tag in the HTML. As a result of that... odd decision, the LoC of WebOSv2's main HTML file turned out to be near the thousand lines. Remember, I was a starting developer.<br><br>After WebOSv2 came the age of Electron and NodeJS. I began working on WebOSv3 rather impulsively, because I learned what Discord and other big applications were (and still are!) using to display themselves as a desktop app: Electron. I followed a quick start guide from yesteryear to see if I could get it working, and when I did, I immediately started working on WebOSv3. v3 improved a lot as apposed to v2, which actually seems the be the trend, doesn't it? Anyway, v3 had filesystem interaction, multiple users, a bunch of personalization options, even its own Javascript powered terminal. When WebOS became ArcOS, I incremented the version from v3 to v4, not because I started over, but because the rebrand of the project changed the entire look and feel. WebOSv3 became ArcOSv4.<br><br>In July 2022 I wanted to do something different. I had been writing Vanilla JS implementations of ArcOS for over two years, and I wanted to tip the scales. So, I decided to go in the complete opposite direction as apposed to v4: I created ArcOS v5 using Typescript and Svelte. Because v5 used a JS framework, I lost the ability to directly interface with the user's filesystem. So, instead of working around that, I wrote a backend to go along with ArcOS that users could connect to, to store their files and settings in the cloud instead of locally on their machines. This worked perfectly.<br><br>Finally, ArcOS v6 rolled around. I started it near the end of 2023. Its idea was simple, I wanted to reimagine the implementation of v5 to create a more stable, professional and refined experience for the user. It sported services, multiple application instances by creating a custom Process system, a more consistent UI, a more refined bug reports system, more wallpapers, even experimental sideloading. After four consecutive years of writing code for WebOS and ArcOS, I decided to shut down the project. The fact of the matter was that I didn't like working on it anymore. So, on September 1st I said goodbye to the servers, to my team, to four years of hard work, so that I could focus on Sacruda."
    },
    "canvasscript": {
      "description": "Een gekke poging om een taal te schrijven voor het manipuleren van een canvas",
      "longDescription": "CanvasScript is a silly thing. I wanted to learn more about HTML canvases, and I figured the best way to accomplish that would be to create a project that incorporates them. So, I created CanvasScript. In CanvasScript you can write code to manipulate a canvas. It's got commands for lines, circles, colors, sizes, whatever you want. It's even got variables and comments to allow you to write the most readable and configurable code. It also has error checking to tell you on what line you're making a mistake. This is accomplished using Javascript exception handling.\nCanvasScript doesn't use any normal standards for creating programming languages, it's really just a bunch of functions that have their arguments parsed out of a string for each row in the user's script. The functionality of CanvasScript can be tested using the test file on the GitHub repository, named \"benchmark.canvas\". This file can also be seen in action in the screenshot above. CanvasScript was intended to be a weekend project as well, which it thankfully stayed as."
    },
    "instype": {
      "description": "Een Socket.IO applicatie waar alles wat je typt gelijk aan alle andere mensen wordt weergegeven",
      "longDescription": "InsType is a fun one. It expands upon the traditional telephone communication and transforms it into a purely textual environment. When you join InsType, you're in this one room with everyone else that's connected. When you type even one character, that character is displayed to the room, meaning that everyone else can see what you type, especially the typos. This encourages the user to type carefully in order to not embarrass themselves. InsType is powered with a Typescript Socket.IO backend, with a rather simple set of events to connect, disconnect and transmit text. InsType is one of my simplest Socket.IO applications, despite the fact that it's often the most fun."
    },
    "inepta": {
      "description": "Een besturingsssysteem in de browser als een voorbeeld van wat mogelijk is met normale Javascript",
      "longDescription": "Inepta is a silly blast from the past: it's (start of) an OS written in vanilla Javascript to look back at the legacy ArcOS days. I made it to see exactly what's actually possible with just plain old vanilla Javascript in a modern browser. To my surprise, it's actually quite a lot. Inepta (which is Latin for 'silly', by the way) sports Process Management, a virtual filesystem (by storing a JSON object in LocalStorage), and a modern-yet-old-school aesthetic. Everything about it is written in a simplistic and modular way to show beginner Javascript programmers (like my classmates) what's theoretically and practically possible in JS."
    },
    "vtdx": {
      "description": "Een Typescript notitie en takenlijst",
      "longDescription": "vTDx was a couple of things. First of all it was a test to see what I could do in Typescript. Because of this, the entirety of vTDx, including the UI, was written in Typescript only code by using the DOM's APIs. vTDx stands for Vite-ToDo-X. the X really didn't have much of a meaning, but I felt it added something to the name that was missing otherwise. Anyway, vTDx was a continuation of TDx: another note taking application that I made using Vanilla JS in Electron.<br><br>I didn't have much of a vision when creating vTDx. I just wanted to see what was possible with my current Typescript skillset, so I chose to remake one of the projects that I was proud of at the time. Looking back, the design of both TDx and vTDx leave a lot to be desired, at least in my honest opinion, but all and all they weren't so bad. vTDx doesn't have a lot of customizability, but it does have a handful of both light mode and dark mode themes. You can collapse the sidebar, there's a trash, and a bunch more stuff I quite honestly can't remember anymore.<br><br>Now that ArcOS is dead, I think vTDx is my longest lasting project to date to still have an online deployment somewhere. I can't imagine how many security vulnerabilities have risen in the versions of the libraries I've used though, that's probably something I'd get nightmares about if I dare to open Dependabot, so, for my own sake, I won't. vTDx probably should have been discontinued and archived a LONG time ago, but in writing this I've decided not to. Just for the memes."
    },
    "donut": {
      "description": "Een port van Donut.C naar Typescript",
      "longDescription": "There really isn't much to say about Donut.C-TS: it's just a test to see if I could port the famous Donut.C project to Typescript. When I made it I actually ported to one of my other projects, ArcOS as the 'DonutApp' application. This can be seen on the ArcOS GitHub."
    },
    "discontinuedNotice": "Ik heb dit project stopgezet! Aan dit project wordt niet meer gewerkt, maar het is nog steeds een goed voorbeeld van wat ik kan.",
    "website": "Website",
    "viewCode": "Code weergeven",
    "moreProjects": "Er is nog meer op <a href=\"https://github.com/IzKuipers\">mijn GitHub</a>!"
  },
  "contact": {
    "_name": "Contact",
    "github": "GitHub",
    "twitter": "Twitter",
    "community": "IzKuipers$ Community",
    "email": "E-mail",
    "discord": "Discord",
    "direct": {
      "title": "Stuur mij een bericht",
      "text": "Heb je een vraag voor mij? Vul het volgende formulier in en ik zal zo snel als mogelijk reageren:",
      "name": "Hoe heet je?",
      "email": "Jouw e-mail?",
      "message": "Jouw bericht?",
      "send": "Versturen"
    }
  }
}
